include ../partials/forms
include ../country

mixin settings_form()
  +form('/admin/settings')
    +text('projectname')(value=settings.project.get('projectname') icon='fa-home' required)
    .form-row
      +text('project_iban', _t('IBAN'))(value=settings.project.get('project_iban') icon="fa-credit-card" groupClass="col-md-8")
      +text('project_bic', _t('BIC'))(value=settings.project.get('project_bic') groupClass='col-md-4')    
    .logo-container(id="logo_container" data-ref="logo")
      - var logo = settings.project.get('logo') 
      - logo = logo.startsWith('http')?logo:_url(logo)
      +output_image('logo', logo)(help=settings.project.get('logo') imgClass='logo')
      +input_group('logo_group')(icon='fa-file-image' noLabel)
        +group_select('logo_change')
          +option('logo_keep')
          +option('logo_upload')
          +option('logo_link')
        +group_output('logo_keep')(class="form-control-plaintext logo-change-input")
        +group_file('logo_upload')(class="d-none logo-change-input" inputId="logo_file")
        +group_input('logo_link')(class="d-none logo-change-input" placeholder="https://...")
    .logo-container(id="logo_select_container" data-ref="logo_select")
      - var logo = settings.project.get('logo_select')||settings.project.get('logo')
      - logo = logo.startsWith('http')?logo:_url(logo)
      +output_image('logo_select', logo)(help=settings.project.get('logo_select')||settings.project.get('logo') imgClass='logo')
      +input_group('logo_select_group')(icon='fa-file-image' noLabel)
        +group_select('logo_select_change')
          +option('logo_select_keep')
          +option('logo_select_upload')
          +option('logo_select_link')
        +group_output('logo_select_keep')(class="form-control-plaintext logo-change-input")
        +group_file('logo_select_upload')(class="d-none logo-change-input" inputId="logo_select_file")
        +group_input('logo_select_link')(class="d-none logo-change-input" placeholder="https://...")      
    +text('email', _t('project_email'))(icon='fa-at' type='email' value=settings.project.get('email') autocomplete=
'false' required)
    +checkbox('email_sendcopy', _t('project_email_sendcopy'))(value=settings.project.get('email_sendcopy') help=_t('project_email_sendcopy_help'))
    +text('smtp_host', _t('project_smtp_host'))(icon='fa-envelope' value=settings.project.get('smtp.host'))
    +number('smtp_port', _t('project_smtp_port'))(placeholder="25" value=settings.project.get('smtp.port'))
    +text('smtp_auth_user', _t('project_smtp_user'))(icon='fa-user' value=settings.project.get('smtp.auth.user'))
    +text('smtp_auth_pass', _t('project_smtp_pass'))(type="password" icon='fa-lock' autocomplete='false')
    +text('url', _t('project_url'))(icon='fa-link' type='url' value=_url(settings.project.get('url')))
    +select('theme')(icon='fa-paint-brush')
      - var selected = settings.project.get('theme') || 'red'
      +option('red')(selected=selected)
      +option('green')(selected=selected)
      +option('turquoise')(selected=selected)
      +option('purple')(selected=selected)
      +option('monochrome')(selected=selected)
    +select('interest_method')(icon='fa-percent')
      - var selected = settings.project.get('defaults.interest_method')
      each method in ['365_compound', '30E360_compound', '360_compound', 'ACT_compound', '365_nocompound', '30E360_nocompound', '360_nocompound', 'ACT_nocompound']
        +option(method, _t('interest_method_' + method))(selected=selected)
    +select('interest_methods_alternative')(icon='fa-percent' multiple addClass="multi-select"  help="Hinweis: Es wird empfohlen keine alternativen Zinsberechnungsmethoden zu verwenden und bei einer Standardmethode zu bleiben.")
      - var selected = settings.project.get('defaults.interest_methods_alternative')
      each method in ['365_compound', '30E360_compound', '360_compound', 'ACT_compound', '365_nocompound', '30E360_nocompound', '360_nocompound', 'ACT_nocompound']
        +option(method, _t('interest_method_' + method), selected)
    +select('interest_payment_type')(icon='fa-reply')
      - var selected = settings.project.get('defaults.interest_payment_type')
      +option('end', _t('interest_payment_type_end'))(selected=selected)
      +option('yearly', _t('interest_payment_type_yearly'))(selected=selected)
    +select('termination_type')(icon='fa-sign-out-alt')
      - var selected = settings.project.get('defaults.termination_type')
      +option('T', _t('termination_type_T'))(selected=selected)
      +option('P', _t('termination_type_P'))(selected=selected)
      +option('D', _t('termination_type_D'))(selected=selected)
    +input_group(_t('termination_type_T') + ' / ' + _t('termination_type_P'))(icon='fa-hourglass-half')
      +group_input('termination_period')(type='number' step='1' value=settings.project.get('defaults.termination_period'))
      +group_select('termination_period_type')
        - var selected = settings.project.get('defaults.termination_period_type')
        +option('M', _t('termination_period_type_M'))(selected=selected)
        +option('w', _t('termination_period_type_w'))(selected=selected)
        +option('Y', _t('termination_period_type_Y'))(selected=selected)
    +select('country')(value=settings.project.get('defaults.country') icon="fa-globe-africa")
      +country_select_options(settings.project.get('defaults.country'))        
    +tags('relationships', undefined, settings.project.get('defaults.relationships'))
    +text('usersuffix', _t('project_usersuffix'))(icon='fa-user' value=settings.project.get('usersuffix') help="Kann Feldnamen enthalten, z.B. {user_last_name}" required)
    +submit_button()

  script.

    function urlExists (url, callback){
      $.ajax({
        type: 'HEAD',
        accepts: {image: 'image/*'},
        dataType: 'image',
        url: url,
        success: function(data, textStatus, request){
          if(request.getResponseHeader('Content-Type') && request.getResponseHeader('Content-Type').startsWith('image/')) {
            callback(true);
          } else {
            callback(false);
          }
        },
        error: function() {
          callback(false);
        }
      });
    }

    $('#logo_change, #logo_select_change').on('change', function() {
      var containerId = $(this).parents('.logo-container').attr('id');
      var ref = $(this).parents('.logo-container').data('ref');
      $('#' + containerId + ' .logo-change-input').addClass('d-none');      
      $('#' + containerId + ' input.logo-change-input').removeAttr('required');      
      $('#' + containerId + ' div.logo-change-input').children('input').removeAttr('required');      
      $('#' + this.value).removeClass('d-none');
      var src, name;
      if (this.value === ref+'_keep') {
        src = $('#'+ref).data('src');
        $('#'+ref+'_link').get(0).setCustomValidity('');
      }
      else if (this.value === ref+'_upload') {        
        if ($('#'+ref).data('localsrc')) {
          src = $('#'+ref).data('localsrc');
          name = $('#'+ref).data('localname');
        } else {
          src = $('#'+ref).data('src');
        }
        $('#'+ref+'_link').get(0).setCustomValidity('');
        $('#'+ref+'_file').attr('required', 'true');      
      } else if (this.value === ref+'_link') {
        if ($('#'+ref+'_link').val()) {
          src = $('#'+ref+'_link').val()
        } else {
          src = $('#'+ref).data('src');
        }
        var value = $('#'+ref+'_link').val();
        if (value && value !== "") {
          urlExists(value, function(success) {
            if (success) {
              $("#"+ref).attr('src', value);
              $('#'+ref+'_help').html( value);      
              $('#'+ref+'_link').get(0).setCustomValidity('');
            } else {
              $("#"+ref).attr('src', $('#'+ref).data('src'));
              $('#'+ref+'_help').html( $('#'+ref).data('src'));      
              $('#'+ref+'_link').get(0).setCustomValidity('URL-Adresse nicht gefunden');
            }
          });
        }  
        $('#'+this.value).attr('required', 'true');      
      }
      $("#"+ref).attr('src', src);
      $('#'+ref+'_help').html(name || src);      
    }); 

    $('#logo_link, #logo_select_link').on('keyup', function() { 
      var containerId = $(this).parents('.logo-container').attr('id');
      var ref = $(this).parents('.logo-container').data('ref');
      var value = this.value;
      if (value && value !== "") {
        urlExists(this.value, function(success) {
          if (success) {
            $("#"+ref).attr('src', value);
            $('#'+ref+'_help').html( value);      
            $('#'+ref+'_link').get(0).setCustomValidity('');
          } else {
            $("#"+ref).attr('src', $('#'+ref).data('src'));
            $('#'+ref+'_help').html( $('#'+ref).data('src'));      
            $('#'+ref+'_link').get(0).setCustomValidity('URL-Adresse nicht gefunden');
          }
        });
      } else {
        $("#"+ref).attr('src', $('#'+ref).data('src'));
        $('#'+ref+'_help').html( $('#'+ref).data('src'));      
        $('#'+ref+'_link').get(0).setCustomValidity('');      
      }
      
    });

    $('#logo_file, #logo_select_file').on('change', function() {   
      var containerId = $(this).parents('.logo-container').attr('id');
      var ref = $(this).parents('.logo-container').data('ref');
      if (this.files && this.files[0]) {
        var file = this.files[0];
        var reader = new FileReader();        
        reader.onload = function(e) {
          $('#'+ref).attr('src', e.target.result);
          $('#'+ref).data('localsrc', e.target.result);
          $('#'+ref+'_help').html(file.name);
          $('#'+ref).data('localname', file.name);
        }        
        reader.readAsDataURL(this.files[0]); // convert to base64 string        
      }
    });

    function saveTags(container) {
      var tags = [];
      container.children('.tag:visible').each(function(index) {
        tags.push($(this).text().trim());
      })
      container.parent().children('.tag-input').val(JSON.stringify(tags));
    }

    $(document).on("click", '.tag-remove', function(e) {
      var container = $(this).parent().parent();
      $(this).parent().remove();
      saveTags(container);
    })

    function addTag(value, input) {    
      if (value && value !== "") {
        var tagsContainer = input.parents('.tags-container');
        var newTag = tagsContainer.find('>:first-child').clone();
        newTag.prepend(value);
        newTag.removeClass('d-none')
        tagsContainer.children('input.new-tag-input').before(newTag);
        input.val("");
        input.attr('size', '1');
        saveTags(tagsContainer);
      }
    }

    $('.new-tag-input').on('change', function(e) {
      addTag($(this).val().trim(), $(this));
    })    

    $('.multi-select').selectpicker();

    $('.new-tag-input').on('keydown', function (e) {
      if(event.key === 'Enter') {
        addTag($(this).val().trim(), $(this));
      } else {
        $(this).attr('size', $(this).val().length);
      }
      return true;
    });